// Code generated by ent, DO NOT EDIT.

package user

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStateToken holds the string denoting the state_token field in the database.
	FieldStateToken = "state_token"
	// FieldNotionToken holds the string denoting the notion_token field in the database.
	FieldNotionToken = "notion_token"
	// FieldDefaultPage holds the string denoting the default_page field in the database.
	FieldDefaultPage = "default_page"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldStateToken,
	FieldNotionToken,
	FieldDefaultPage,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultStateToken holds the default value on creation for the "state_token" field.
	DefaultStateToken string
	// DefaultNotionToken holds the default value on creation for the "notion_token" field.
	DefaultNotionToken string
	// DefaultDefaultPage holds the default value on creation for the "default_page" field.
	DefaultDefaultPage string
)

// OrderOption defines the ordering options for the User queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByStateToken orders the results by the state_token field.
func ByStateToken(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStateToken, opts...).ToFunc()
}

// ByNotionToken orders the results by the notion_token field.
func ByNotionToken(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNotionToken, opts...).ToFunc()
}

// ByDefaultPage orders the results by the default_page field.
func ByDefaultPage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDefaultPage, opts...).ToFunc()
}
