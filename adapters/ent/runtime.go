// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/notion-echo/adapters/ent/schema"
	"github.com/notion-echo/adapters/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescStateToken is the schema descriptor for state_token field.
	userDescStateToken := userFields[1].Descriptor()
	// user.DefaultStateToken holds the default value on creation for the state_token field.
	user.DefaultStateToken = userDescStateToken.Default.(string)
	// userDescNotionToken is the schema descriptor for notion_token field.
	userDescNotionToken := userFields[2].Descriptor()
	// user.DefaultNotionToken holds the default value on creation for the notion_token field.
	user.DefaultNotionToken = userDescNotionToken.Default.(string)
	// userDescDefaultPage is the schema descriptor for default_page field.
	userDescDefaultPage := userFields[3].Descriptor()
	// user.DefaultDefaultPage holds the default value on creation for the default_page field.
	user.DefaultDefaultPage = userDescDefaultPage.Default.(string)
}
